- self.content_for(:html, :page) do
  /
    #{__FILE__}
  %div{'data-role'  => 'header',
       'data-theme' => 'b'}
    = @back_button.render(:html)
    %h1
      Work
    = @done_button.render(:html)
  %div{'data-role'  => 'content',
       'style'      => 'padding-top: 0px'}
    %ul{'data-inset'  => 'true',
        'data-role'   => 'listview',
        'data-theme'  => 'd'}
      %li
        = @project_link.render(:html) do |element|
          - element.content_for(:html, :link) do
            - if @task.project
              %span
                = @task.project.name
            - else
              %span.ui-disabled
                tap to select a project
      %li
        = @activity_link.render(:html) do |element|
          - element.content_for(:html, :link) do
            - if @task.activity
              %span
                = @task.activity.name
            - else
              %span.ui-disabled
                tap to select an activity
      %li
        = @flag_link.render(:html) do |element|
          - element.content_for(:html, :link) do
            %span
              = Pike::Task::FLAG_NAMES[@task.flag]

    %p.instructions
      %span{'style' => 'font-weight: bold'}
        Liked
      tasks appear at the top of the list.
      %br
      %span{'style' => 'font-weight: bold'}
        Completed
      tasks appear at the bottom of the list.
      %br
      %span{'style' => 'font-weight: bold'}
        Other
      tasks appear in the middle of the list.

    %ul{'data-inset'  => 'true',
        'data-role'   => 'listview',
        'data-theme'  => 'd'}
      %li
        = RubyApp::Language.locale.strftime(@work.date, Pike::Application.configuration.format.date.short)
      %li
        %label.ui-hidden-accessible{'for' => @duration_input.element_id}
          Duration
        = @duration_input.render(:html)
      %li
        %label.ui-hidden-accessible{'for' => @note_input.element_id}
          Note
        = @note_input.render(:html)

    %p.instructions
      Tap
      %a{'href'   => 'https://github.com/hpoydar/chronic_duration#readme',
         'target' => '_blank'}
        here
      for other examples of parse-able duration strings, e.g. 2h 30m or 2:30

    = @properties.render(:html)

    = @delete_button.render(:html) do |element|
      - element.content_for(:html, :link, 'Delete Task')
