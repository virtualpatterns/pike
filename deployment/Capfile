require 'rubygems'
require 'railsless-deploy'
load    'config/deploy'

namespace :pike do

  desc 'Print version information'
  task :version do
    run "cd /var/www/pike/current && bundle exec rake pike:version"
  end

  desc 'Start'
  task :start, :roles => :application do
    find_and_execute_task('pike:daemon:start')
    run "cd /var/www/pike/current && mkdir --parents ./process/thin/pid && mkdir --parents ./process/thin/log && #{servers == 1 ? 'rm -f ./process/thin/pid/thin.pid' : 'rm -f ./process/thin/pid/thin.*.pid'} && RUBY_APP_CONFIGURATION='#{configuration}' thin --port 8008 --servers #{servers} --rackup config.ru --daemonize --log ./process/thin/log/thin.log --pid ./process/thin/pid/thin.pid start"
  end

  desc 'Stop'
  task :stop, :roles => :application do
    run "cd /var/www/pike/current && #{servers == 1 ? 'thin --pid ./process/thin/pid/thin.pid stop' : 'for pid in ./process/thin/pid/thin.*.pid; do thin --pid $pid stop; done'}"
    find_and_execute_task('pike:daemon:stop')
  end

  desc 'Restart'
  task :restart do
    find_and_execute_task('pike:stop')
    find_and_execute_task('pike:start')
  end

  desc 'Update without stop/start'
  task :update_only do
    find_and_execute_task('deploy:update')
    sudo 'gem update'
    find_and_execute_task('pike:data:migrate')
  end

  desc 'Update'
  task :update do
    find_and_execute_task('pike:stop')
    find_and_execute_task('pike:update_only')
    find_and_execute_task('pike:start')
    run 'tail -f /var/www/pike/current/process/thin/log/thin.8008.log'
  end

  namespace :daemon do

    desc 'Start the daemon'
    task :start, :roles => :data do |task|
      run "cd /var/www/pike/current && AMAZON_ACCESS_KEY='#{ENV['AMAZON_ACCESS_KEY']}' AMAZON_SECRET_KEY='#{ENV['AMAZON_SECRET_KEY']}' RUBY_APP_CONFIGURATION='#{configuration}' bundle exec rake pike:daemon:start"
    end

    desc 'Stop the daemon'
    task :stop, :roles => :data do |task|
      run 'cd /var/www/pike/current && bundle exec rake pike:daemon:stop'
    end

  end

  namespace :data do

    desc 'Dump database to ./dump.tgz'
    task :dump, :roles => :data do
      run 'cd /var/www/pike/current && bundle exec rake pike:data:dump'
      download '/var/www/pike/current/dump.tgz', '.', :via=> :scp
    end

    desc 'Restore dumped database from ./dump.tgz'
    task :restore, :roles => :data do
      find_and_execute_task('pike:stop')
      upload './dump.tgz', '/var/www/pike/current', :via=> :scp
      run 'cd /var/www/pike/current && bundle exec rake pike:data:restore'
      find_and_execute_task('pike:start')
    end

    namespace :identities do

      desc 'Expire all'
      task :expire_all, :roles => :data do
        run 'cd /var/www/pike/current && bundle exec rake pike:data:identities:expire_all'
      end

    end

    desc 'Migrate'
    task :migrate, :roles => :data do
      run 'cd /var/www/pike/current && bundle exec rake pike:data:migrate:all'
    end

  end

end
